---
format:
  html:
    css: www/styles.css
execute:
  echo: false
  warning: false
  error: false
---

<!-- Conecta à fonte do Google Fonts -->
<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Dosis:wght@400;700&display=swap" rel="stylesheet">
</head>

<!-- Conecta a uma versão min do Animate.css através de uma CDN -->
<head>
<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
</head>
<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script>AOS.init();</script>

<!-- Conecta a uma versão slim do JQuery através de uma CDN -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js" integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8=" crossorigin="anonymous"></script>

<!-- Conecta a uma versão min do Anime.js localmente -->
<script src="www/js/anime.min.js"></script>

<!-- Associa Binds clicking on the navigation buttons
to scrolling behaviour on the page -->
<script src="www/js/navigator.js"></script>

<!-- Associa animações a elementos da página -->
<script src="www/js/animation.js"></script>

```{r}

# Setup inicial ##########
## Carrega os pacotes
library(dplyr)
library(htmltools)
library(BRlist)
library(purrr)
library(glue)
library(rlang)
library(ggplot2)
library(ggiraph)
library(ggtext)
library(tidyr)

## Lista os nomes de funções do {BRlist}
fun_list <- ls("package:BRlist")

## Carrega todos os dados usando as funções do {BRlist}
df <- fun_list |> 
  purrr::map_dfr(function(fname) {
    
    fexpr = glue::glue("BRlist::{fname}")
    fexpr = rlang::parse_expr(fexpr)
    df = eval(fexpr)
    df |> dplyr::mutate(group = stringr::str_remove(fname, "BRlist"))
    
  })

## Função que gera o container para os gráficos
containsGraph <- function(ggobj) {
  div(
    class = "graph-container",
    `data-aos` = "fade-left", `data-aos-duration` = "1000", `data-aos-easing` = "ease-out-back",
    ggiraph::girafe(ggobj = ggobj, width_svg = 5, height_svg  = 5)
  )
}

```

<!-- ########################### Seção ########################### -->
```{r}

# Cria um polígono svg para recortar a imagem de capa
htmltools::tags$svg(
  class = "clip-svg",
  htmltools::tags$defs(
    htmltools::tags$clipPath(
      id = "cover-mask", clipPathUnits="objectBoundingBox",
      htmltools::tags$polygon(
        points = "0 0, 1 0, 1 0.8, 0.7 0.8, 0.5 1, 0.3 0.8, 0 0.8"
      )
    )
  )
)

# Capa ##########
div(
  id = "cover",
  
  ## Insere a imagem mascarada com o título
  div(
    id = "cover-masked",
    div(id = "cover-title", "FAUNA FRAGILIZADA")
  ),
  
  ## Insere a mensagem inicial com o botão de navegação
  div(
    id = "cover-text", class = "flex-container",
    div(id = "cover-message", "O Brasil tem mais de 4000 espécies ameaçadas de extinção."),
    div("A perda dessas espécies fragiliza a posição do país frente às mudanças climáticas do Antropoceno.",
        br(),
        strong("Clique no botão"), " abaixo para navegar pela página."),
    span(class = "navdown", "▾")
  )
)

```

<!-- ########################### Seção ########################### -->
```{r}

# Gera o gráfico para representar os limites planetários.
# Nomes e níveis retirados de https://www.bbc.com/portuguese/geral-59214427
## Gera coordenadas das barras
limplan_bars <- dplyr::tibble(
  x = c(1, 1, 2, 3, 4,
        5, 5.75, 5.75, 5.75,
        6.25, 6.25, 6.25,
        7, 8, 8,
        9, 9, 9),
  y = c(1, 0.4, NA, 0.5, NA,
        0.8, 1, 1, 1,
        1, 1, 0.4,
        0.5, 1, 0.7,
        1, 1, 1),
  width = c(rep(1, 6), rep(0.5, 6), rep(1, 6)),
  ordem = c(1, 2, NA, 1, NA,
            1, 1, 2, 3,
            1, 2, 3,
            1, 1, 2,
            1, 2, 3),
  alpha = c(rep(0.3, 15), rep(1, 3))
) |> 
  dplyr::mutate(ordem = factor(ordem, levels = 3:1))

## Gera coordenadas das guias que separam os níveis
limplan_lines <- dplyr::tibble(
  y = c(1,1.5,2,2.3,2.6),
  line = c("dashed","solid","dashed","solid","solid"),
  color = c("black","white","black","white","white")
)

## Gera coordenadas das guias que separam as categorias
limplan_guides <- dplyr::tibble(
  x = c(1:5, 5.75, 6.25, 7:9),
  width = c(rep(1, 5), rep(0.5, 2), rep(1, 3)),
  color = c(rep("black", 6), "white", rep("black", 3))
)

## Gera coordenadas dos textos
limplan_labels <- dplyr::tibble(
  x = c(1:9, 5.75, 6.25, 2, 4),
  y = c(rep(3.8, 9), 3.1, 3.1, 1.5, 1.5),
  face = c(rep("bold", 9), rep("plain", 4)),
  size = c(rep(3, 8), 5, rep(3, 2), rep(5, 2)),
  label = c("Mudanças\nclimáticas",
            "Novas entidades\n(como microplásticos)",
            "Esgotamento\ndo ozônio\nestratosférico",
            "Carga de\naerosol\natmosférico",
            "Acidificação\ndo oceano",
            "Fluxos\nbioquímicos",
            "Uso de\nágua doce",
            "Mudanças no\nuso da terra",
            "Integridade\nda biosfera",
            "Nitrogênio",
            "Fósforo",
            "?",
            "?")
)

## Gera o gráfico estático
estatico <- NULL |> 
  ggplot() +
  
  ### Insere as barras
  geom_col(aes(x = x, y = y, width = width,
               fill = ordem, alpha = I(alpha)),
           data = limplan_bars) +
  
  ### Insere as guias para os níveis
  geom_hline(aes(yintercept = y, linetype = I(line), color = I(color)),
             data = limplan_lines) +
  
  ### Insere as guias para as categorias
  geom_vline(aes(xintercept = x-width/2, color = I(color)),
             data = limplan_guides) +
  
  ### Insere os textos
  geom_text(aes(x = x, y = y, label = label,
                fontface = face, size = I(size)),
            lineheight = 0.9, data = limplan_labels) +
  
  ### Torna as coordenadas polares e aplica pequena rotação
  coord_polar(start = -0.2) +
  
  ### Define regras de mapeamento
  scale_fill_discrete(type = c("1" = "#96bd67","2" = "#ffa41d","3" = "#d34529")) +
  
  ### Define decoração e estética
  theme_void() +
  theme(
    aspect.ratio = 1,
    legend.position = "none"
  )

# Limites planetários ##########
div(
  class = "section-container",
  
  div(
    class = "section-container flex-container",
    
    ## Insere os botões de navegação
    span(class = "navup", "▴"),
    
    div(
      class = "content-container",
      
      ## Insere o título da seção
      div(class = "section-title", "Por que evitar a extinção de espécies?"),
      
      div(
        class = "body-container",
        
        ## Insere o texto explicativo
        div(
          class = "section-text",
          "Texto que introduz o conceito de limites planetários e explica como a integridade da biosfera está sendo afetada e como isso ameaça a existência de um espaço seguro para a humanidade"
        ),
        
        ## Insere o gráfico com os limites planetários
        containsGraph(estatico)
      )
    ),
    
    ## Insere os botões de navegação
    span(class = "navdown", "▾")
  ),
  
  div(class = "section-container bg-container")
  
)

```

<!-- ########################### Seção ########################### -->
```{r}

# Gera o gráfico para representar os níveis de perda
## Define as coordenadas dos elementos
perda_df <- dplyr::tibble(
  x = 1,
  y = c(1:3, 5:7),
  label = c("Vulnerável",
            "Em perigo",
            "Criticamente em perigo",
            "Regionalmente extinto",
            "Extinto na natureza",
            "Extinto"),
  abbrev = c("VU", "EN", "CR", "RE", "EW", "EX"),
  pnt_color = c("#806C00", "#824500", "#801100",
                "#FFD900", "#FF8800", "#FF2200"),
  abv_color = c(rep("white", 3), rep("black", 3))
)

## Gera o gráfico
estatico <- perda_df |> 
  ggplot(aes(x = x, y = y)) +
  
  ### Insere linhas para agrupar os trios de níveis
  annotate("linerange", x = 1, ymin = c(1,5), ymax = c(3,7),
           size = 20, lineend = "round", color = "#D6D6D6") +
  
  ### Insere os pontos com as abreviaturas
  geom_point(aes(fill = I(pnt_color), color = I(abv_color)),
             shape = 21, size = 12, stroke = 2) +
  geom_text(aes(label = abbrev, color = I(abv_color)),
            fontface = "bold", size = 5) +
  
  ### Insere os nomes das categorias
  geom_text(aes(label = label), hjust = 1, nudge_x = -0.3) +
  
  ### Insere a reta de orientação e seu texto
  annotate("segment", x = 1.4, xend = 1.4, y = 1, yend = 7,
           size = 3, arrow = arrow(), lineend = "round") +
  annotate("text", x = 1.5, y = 1, lineheight = 0.9,
           angle = -90, hjust = 1, vjust = 0, size = 5,
           label = "Níveis mais altos indicam\nmaior perda de uma espécie") +
  
  ### Define regras de mapeamento
  scale_x_continuous(limits = c(0, 1.5), expand = expansion(mult = 0.2)) +
  scale_y_continuous(expand = expansion(mult = 0.1)) +
  
  ### Define decoração e estética
  theme_void() +
  theme(
    aspect.ratio = 1.3,
    legend.position = "none"
  )

# Categorizando a perda ##########
div(
  class = "section-container",
  
  div(
    class = "section-container flex-container",
    
    ## Insere os botões de navegação
    span(class = "navup", "▴"),
    
    div(
      class = "content-container",
      
      ## Insere o título da seção
      div(class = "section-title", "Como classificar o nível de perda de uma espécie?"),
      
      div(
        class = "body-container",
        
        ## Insere o texto explicativo
        div(
          class = "section-text",
          "Texto que introduz o conceito de limites planetários e explica como a integridade da biosfera está sendo afetada e como isso ameaça a existência de um espaço seguro para a humanidade"
        ),
        
        ## Insere o gráfico com os limites planetários
        containsGraph(estatico)
      )
    ),
    
    ## Insere os botões de navegação
    span(class = "navdown", "▾")
  ),
  
  div(class = "section-container bg-container")
  
)

```









```{r}

# 2. Plot description ##########


## Places links to my social media profiles
# div(
#   id='author',
#   
#   a(
#     href='https://twitter.com/icarobsc',
#     target='_blank',
#     span(class='glyphs', id='twt'),
#     "@IcaroBSC"
#   ),
#   a(
#     href='https://github.com/IcaroBernardes',
#     target='_blank',
#     span(class='glyphs', id='ghb'),
#     "@IcaroBernardes"
#   ),
#   a(
#     href='https://www.linkedin.com/in/icarobsc/',
#     target='_blank',
#     span(class='glyphs', id='lkd'),
#     "@icarobsc"
#   )
#   
# )

# Foto de capa: Charles J. Sharp
# Foto da Amazônia desmatada: picture-alliance/dpa/INPE

```

